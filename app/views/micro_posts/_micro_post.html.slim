div class="central-meta .item" id="status-#{micro_post.id}"
  .user-post
    .friend-info
      figure
        = image_tag micro_post.user.thumbnail.present? ? micro_post.user.thumbnail_url : "avatar.png"
      .friend-name
        ins
          a[href="time-line.html" title=""]
            - if micro_post.user.first_name.present?
              = micro_post.user.first_name + " " + micro_post.user.last_name
            - else
              = micro_post.user.email
        = render "micro_posts/micro_post-link", micro_post: micro_post
        span
          = time_ago_in_words micro_post.created_at
      - if user_signed_in? && current_user?(@user)
        .buttons
          ul
            li
              a class="edit" data-status-id="#{micro_post.id}" 
                i.fas.fa-edit
            li
              = link_to micro_post, method: :delete, data: { confirm: t(".confirm") }, remote: true do
                i.fas.fa-trash-alt
      .post-meta
        = render "micro_posts/micro_post-content", micro_post: micro_post
        - if user_signed_in?
          .we-video-info#vote_form
            ul
              li
                span.comment[data-toggle="modal" title="#{t(".comments")}" data-target="#status-comment-#{micro_post.id}"]
                  i.far.fa-comments
                  ins
                    | 52
              li.upvotes
                = render "upvotes/form", micro_post: micro_post
              li.downvotes
                = render "downvotes/form", micro_post: micro_post
        .edit-form
        div class="modal fade" id="status-comment-#{micro_post.id}" tabindex="-1" role="dialog" aria-labelledby="status-comment-#{micro_post.id}" aria-hidden="true"
          .modal-dialog[role="document"]
            .modal-content
              .modal-header
                h5.modal-title
                  | Social networking
                button.close[type="button" data-dismiss="modal" aria-label="Close"]
                  span[aria-hidden="true"]
                    | Ã—
              .modal-body
                .coment-area.status-comment-area
                  = form_for [micro_post, Comment.new] do |f|
                    = f.text_area :content, placeholder: t(".comment-placeholder")
                    = f.submit t(".comment-add"), class: "btn btn-comment"
                  ul.comments-list
                    = render(partial: 'comments/comment', collection: micro_post.comments.order_created_desc)
